---

- name: remove bootstrap user
  command: chroot {{ dbstrp_mountpoint }} userdel --remove debootstrap

- name: remove bootstrap sudoers file
  file:
    state: absent
    path: "{{ dbstrp_mountpoint }}/etc/sudoers.d/debootstrap"

- name: umount pseudo filesystems
  command: umount {{ _tgt_root }}/{{ item }}
  with_items: "{{ pseudo_fs|reverse }}"
  when: _pseudomount is defined and _pseudomount.changed

- name: umount target
  shell: >
    umount {{ _tgt_root }}{{ _mountpoints[item]['mount'] }}
  with_items: "{{ (_mountlist|sort)[::-1] }}" # | reverse seems to be broken
  when: _mount is defined and _mount.changed

- name: export zpools
  shell: >
    zpool export {{ item['poolname']|default('rpool') }}
  with_items: zfs_pool|default([])|reverse
  when: zfs_pool is defined and zfs_fs is defined

- name: deactivate volumes
  lvol:
    active: no
    lv: "{{ volume.lvm.lv|default(volume.lvm.thinpool) }}"
    vg: "{{ volume.lvm.vg }}"
  loop_control:
    loop_var: volume
    label: "{{ volume.lvm.vg }}/volume.lvm.lv|default(volume.lvm.thinpool) }}"
  loop: "{{ lvm|reverse|list }}"
  when: >
    volume.lvm is defined and (
    volume.lvm.lv is defined or volume.lvm.thinpool is defined)

- name: Close luks devices
  command: >
    cryptsetup luksClose /dev/mapper/{{ item.value['target'] }}
  loop: "{{ _encrypt_targets|default({})|dict2items }}"
  loop_control:
    label: "{{ item.key }}"
  when: _luksopen is defined and _luksopen.changed

- name: stop raid devices
  command: "mdadm --stop {{ item.key }}"
  loop: "{{ _tgt_devices|dict2items }}"
  when: "'/dev/md' in item.key"
